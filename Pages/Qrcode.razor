@page "/QRCode"
@using QRCoder;
@using System.Drawing;
@using System.Drawing.Imaging;
@using System.IO;
@using System.Threading;
@using System.Threading.Tasks;

@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor

<h2>Athletics Essendon Track Log </h2>
<h1><font size="30">Please Register Your Track Access</font></h1>
<h2>Nb: This is now a mandatory requirement due to COVID-19.</h2>
<br />
<br />

<h2>@InputText</h2>
<br />
<a href="@InputText">@InputText</a><br />
Shorter:<br />
<h2>@bitly</h2>
<br />
<!-- button class="btn btn-primary" @onclick="GenerateQRCode"Generate QR Code -->
<br />
@*<br />
    <a href="https://www.youtube.com/watch?v=FzwRxmy7eV4">YouTub Video of how to make this app.</a>
    <a href="https://github.com/httphandlers/QRCoder">The GitHub site for the QrCode.Net Nuget Package</a>
    <br />
    <br />
    <input type="text" @bind="InputText" placeholder="Enter URL here ..." />
    <br />
    <br />
    <button class="btn btn-primary" @onclick="@GenerateQRCode">Generate QR Code</button>
    <br />
    <br />*>*@
<img src="@QRCodeStr" style="width:400px;height:400px;" />

@code{
    string InputText { get; set; } = "";
    string QRCodeStr { get; set; } = "";
    string bitly {get; set;} = "https://bit.ly/3fnzHij";



    protected override void OnInitialized()
    {
        GenerateQRCode();
        //GenerateQRCode();
        //Task t3 = Task.Run(() =>
        //{
        //    GenerateQRCode();
        //});
        //// Wait for the task to finish.
        //await t3;
    }


    public void GenerateQRCode()
    {
        //var zz = httpContextAccessor.HttpContext.Request;
        //string url = httpContextAccessor.HttpContext.Request.Scheme + "://" + httpContextAccessor.HttpContext.Request.Host.Value;
        //InputText = url + "";
        InputText ="https://athsessgate.azurewebsites.net/";
        StateHasChanged();
        //var z = HttpContext.Request.UrlReferrer;
        //QRCodeStr = "";
        //return;
        if (!String.IsNullOrEmpty(InputText))
        {
            using (MemoryStream ms = new MemoryStream())
            {
                /* var uri = new Uri(Request.Url.AbsoluteUri);
                url = uri.Scheme + "://" + uri.Host + "/"; ente
                                 var y = Url.Content(Request.Url.PathAndQuery);
                var x = Request.Url.AbsoluteUri.ToString()

                //Url generator = new Url("https://github.com/codebude/QRCoder/");
                //string payload = generator.ToString();*/

                QRCodeGenerator qrGenerator = new QRCodeGenerator();
                QRCodeData qrCodeData = qrGenerator.CreateQrCode(InputText, QRCodeGenerator.ECCLevel.Q);
                QRCode qrCode = new QRCode(qrCodeData);
                using (Bitmap qrCodeImage = qrCode.GetGraphic(20))
                {
                    qrCodeImage.Save(ms, ImageFormat.Png);
                    QRCodeStr = "data:image/png;base64," + Convert.ToBase64String(ms.ToArray());
                }

            }
        }
    }
}

