@page "/QRCode"
@page "/QRCode/{CurrentCount:int}"
@using QRCoder;
@using System.Drawing;
@using System.Drawing.Imaging;
@using System.IO;
@using System.Threading;
@using System.Threading.Tasks;

@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor
@inject BlazorQRCode.Data.HomeController  homeController
@inject NavigationManager navigationManager

<h2>Athletics Essendon Track Log </h2>
<h1><font size="30">Please Register Your Track Access</font></h1>
<h2>Now a mandatory requirement due to COVID-19.</h2>
<p>
    Use the QR Code to access the site: Site it in your phone's camera. <br />
    Or enter the following URL in your phone's browser.
</p>
<h2>@InputText</h2>
<h2>OR ...</h2>
<h2>@bitly</h2>
<br />
<br />

<img src="@QRCodeStr" style="width:500px;height:500px;" />

@code{
    [Parameter]
    public int? CurrentCount { get; set; }

    string InputText { get; set; } = "";
    string QRCodeStr { get; set; } = "";
    string bitly { get; set; } = "https://bit.ly/3fnzHij";



    protected override void OnInitialized()
    {
        base.OnInitialized();
        CurrentCount = CurrentCount ?? 1;
        /*
        if (CurrentCount != Data.Settings.QrcodePin)
        {
            navigationManager.NavigateTo("/");
        }
        if (!homeController.GetState())
        {
            navigationManager.NavigateTo("/");
        }*/
        GenerateQRCode();
    }


    public void GenerateQRCode()
    {
        //var zz = httpContextAccessor.HttpContext.Request;
        //string url = httpContextAccessor.HttpContext.Request.Scheme + "://" + httpContextAccessor.HttpContext.Request.Host.Value;
        //InputText = url + "";
        InputText = "https://athsessgate.azurewebsites.net/";
        StateHasChanged();
        //var z = HttpContext.Request.UrlReferrer;
        //QRCodeStr = "";
        //return;
        if (!String.IsNullOrEmpty(InputText))
        {
            using (MemoryStream ms = new MemoryStream())
            {
                /* var uri = new Uri(Request.Url.AbsoluteUri);
                url = uri.Scheme + "://" + uri.Host + "/"; ente
                                 var y = Url.Content(Request.Url.PathAndQuery);
                var x = Request.Url.AbsoluteUri.ToString()

                //Url generator = new Url("https://github.com/codebude/QRCoder/");
                //string payload = generator.ToString();*/

                QRCodeGenerator qrGenerator = new QRCodeGenerator();
                QRCodeData qrCodeData = qrGenerator.CreateQrCode(InputText, QRCodeGenerator.ECCLevel.Q);
                QRCode qrCode = new QRCode(qrCodeData);
                using (Bitmap qrCodeImage = qrCode.GetGraphic(20))
                {
                    qrCodeImage.Save(ms, ImageFormat.Png);
                    QRCodeStr = "data:image/png;base64," + Convert.ToBase64String(ms.ToArray());
                }

            }
        }
    }
}

